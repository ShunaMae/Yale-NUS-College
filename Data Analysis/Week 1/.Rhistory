#(18) Using this new <d1>, find the means of headPeak by Sex (i.e. for M and for F separately). (4 marks)
library(dplyr)
#(3) Using the code provided in the lecture slides, install the <readxl> package. [2 marks]
install.packages("readxl")
library(readxl)
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
library(ggplot2)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt")
#(8) Save "heightweight.xlsx" as a CSV (.csv) file from Excel (Save as...) and import it as an object called <d3>. [3 marks]
d3 <- read.csv("heightweight.csv")
###########################################################
##Section C: Preparing data in R
###########################################################
#(9) Create a vector named <hp> with the following values in it: 41,39,61,73,84,22. [2 marks]
hp <- c(41,39,61,73,84,22)
#(10) Change the value of the third element in <hp> to 55. [1 mark]
hp[3] <- 55
?round
#(11) Halve all the values in <hp> and round them up to the nearest whole number. [3 marks]
ceiling(hp / 2)
#(12) Remove the last element from <hp>. [1 mark]
hp <- hp[-length(hp)]
#(13) What is the value of the sum of all the elements in <hp> now? [1 mark]
sum(hp)
#(14)(a) Create a vector <reps> with elements that increase from 1 to <101 in steps of 4. [2 marks]
reps <- seq(1, 100, 4)
#(14)(b) How many elements are inside <reps>? [1 mark]
length(reps)
#(15) How many rows are in your dataset <d1>? [1 mark]
nrow(d1)
#(16)(a) Using the <hp> vector from (12), replicate it 5 times to get one long vector called <hpr>. [2 marks]
hpr <- rep(hp, 5)
#(16)(b) Check that <hpr> has the same number of elements as <d1> has rows. If not, try too repeat the steps above. [1 mark]
length(hpr) == nrow(d1)
#(17) Add <hpr> to to <d1> as a variable called "headPeak". [2 marks]
d1$headPeak <- hpr
d1$original <- hpr
#(18) Using this new <d1>, find the means of headPeak by Sex (i.e. for M and for F separately). (4 marks)
library(dplyr)
d1 |>
group_by(Sex) |>
summarise(n = mean(headPeak))
#(19) Write a Conditional command to implement the following: if the mean <weight> in <d1> is 60, multiply <headPeak> by 2. [4 marks]
if (mean(d1$weight) == 60){
d1$headPeak = d1$headPeak * 2
}
#(20) Write a For loop adding 1 to d1$headPeak[1]; 2 to d1$headPeak[2]; ... 25 to d1$headPeak[25]. [6 marks]
#Hint: your dummy variable <i> starts from 1 and increases by 1 with each iteration.
dummy <- seq(1, 25)
d1$dummy <- dummy
for (i in range(1,nrow(d1))){
d1$headPeak = d1$headPeak + d1$dummy
}
View(d1)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(3) Using the code provided in the lecture slides, install the <readxl> package. [2 marks]
install.packages("readxl")
install.packages("readxl")
library(readxl)
library(ggplot2)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx", head = TRUE)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx", h = TRUE)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
View(d1)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
View(d1)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
library(readxl)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
library(readxl)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
remove.packages("readxl")
#(3) Using the code provided in the lecture slides, install the <readxl> package. [2 marks]
install.packages("readxl")
install.packages("readxl")
library(readxl)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
View(d1)
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
install.packages("ggplot2")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
#(3) Using the code provided in the lecture slides, install the <readxl> package. [2 marks]
install.packages("readxl")
install.packages("readxl")
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
library(readxl)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(3) Using the code provided in the lecture slides, install the <readxl> package. [2 marks]
install.packages("readxl")
install.packages("readxl")
library(readxl)
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages(ggplot2)
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt", header = T)
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt", header = T)
View(d2)
#(8) Save "heightweight.xlsx" as a CSV (.csv) file from Excel (Save as...) and import it as an object called <d3>. [3 marks]
d3 <- read.csv("heightweight.csv")
View(d3)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
heightweight <- read_excel("heightweight.xlsx")
remove.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(readxl)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
heightweight <- read_excel("heightweight.xlsx")
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt", header = T)
View(d2)
#(8) Save "heightweight.xlsx" as a CSV (.csv) file from Excel (Save as...) and import it as an object called <d3>. [3 marks]
d3 <- read.csv("heightweight.csv")
###########################################################
##Section C: Preparing data in R
###########################################################
#(9) Create a vector named <hp> with the following values in it: 41,39,61,73,84,22. [2 marks]
hp <- c(41,39,61,73,84,22)
#(10) Change the value of the third element in <hp> to 55. [1 mark]
hp[3] <- 55
?round
#(11) Halve all the values in <hp> and round them up to the nearest whole number. [3 marks]
ceiling(hp / 2)
#(12) Remove the last element from <hp>. [1 mark]
hp <- hp[-length(hp)]
#(13) What is the value of the sum of all the elements in <hp> now? [1 mark]
sum(hp)
#(14)(a) Create a vector <reps> with elements that increase from 1 to <101 in steps of 4. [2 marks]
reps <- seq(1, 100, 4)
#(14)(b) How many elements are inside <reps>? [1 mark]
length(reps)
#(15) How many rows are in your dataset <d1>? [1 mark]
nrow(d1)
#(16)(a) Using the <hp> vector from (12), replicate it 5 times to get one long vector called <hpr>. [2 marks]
hpr <- rep(hp, 5)
#(16)(b) Check that <hpr> has the same number of elements as <d1> has rows. If not, try too repeat the steps above. [1 mark]
length(hpr) == nrow(d1)
#(17) Add <hpr> to to <d1> as a variable called "headPeak". [2 marks]
d1$headPeak <- hpr
d1$original <- hpr
#(18) Using this new <d1>, find the means of headPeak by Sex (i.e. for M and for F separately). (4 marks)
library(dplyr)
d1 |>
group_by(Sex) |>
summarise(n = mean(headPeak))
#(19) Write a Conditional command to implement the following: if the mean <weight> in <d1> is 60, multiply <headPeak> by 2. [4 marks]
if (mean(d1$weight) == 60){
d1$headPeak = d1$headPeak * 2
}
for (i in 1:nrow(d1)){
d1$headPeak = d1$headPeak + i
}
View(d1)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(17) Add <hpr> to to <d1> as a variable called "headPeak". [2 marks]
d1$headPeak <- hpr
d1 |>
group_by(Sex) |>
summarise(n = mean(headPeak))
#(19) Write a Conditional command to implement the following: if the mean <weight> in <d1> is 60, multiply <headPeak> by 2. [4 marks]
if (mean(d1$weight) == 60){
d1$headPeak_doubled = d1$headPeak * 2
}
mean(d1$weight)
d1$headPeak = d1$headPeak * 2
}
#(19) Write a Conditional command to implement the following: if the mean <weight> in <d1> is 60, multiply <headPeak> by 2. [4 marks]
if (mean(d1$weight) == 60){
d1$headPeak = d1$headPeak * 2
}
d1$headPeak = d1$headPeak * 2
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(17) Add <hpr> to to <d1> as a variable called "headPeak". [2 marks]
d1$headPeak <- hpr
mean(d1$headPeak)
###########################################################
##Section C: Preparing data in R
###########################################################
#(9) Create a vector named <hp> with the following values in it: 41,39,61,73,84,22. [2 marks]
hp <- c(41,39,61,73,84,22)
#(10) Change the value of the third element in <hp> to 55. [1 mark]
hp[3] <- 55
#(11) Halve all the values in <hp> and round them up to the nearest whole number. [3 marks]
ceiling(hp / 2)
#(12) Remove the last element from <hp>. [1 mark]
hp <- hp[-length(hp)]
#(13) What is the value of the sum of all the elements in <hp> now? [1 mark]
sum(hp)
#(14)(a) Create a vector <reps> with elements that increase from 1 to <101 in steps of 4. [2 marks]
reps <- seq(1, 100, 4)
#(14)(b) How many elements are inside <reps>? [1 mark]
length(reps)
#(15) How many rows are in your dataset <d1>? [1 mark]
nrow(d1)
#(16)(a) Using the <hp> vector from (12), replicate it 5 times to get one long vector called <hpr>. [2 marks]
hpr <- rep(hp, 5)
mean(d1$weight)
View(d1)
#(19) Write a Conditional command to implement the following: if the mean <weight> in <d1> is 60, multiply <headPeak> by 2. [4 marks]
if (mean(d1$weight) == 60){
d1$headPeak = d1$headPeak * 2
}
d1$headPeak_added = d1$headPeak_doubled + i
d1$headPeak_added = d1$headPeak + i
View(d1)
d1$headPeak_added[i] = d1$headPeak + i
for (i in 1:nrow(d1)){
d1$headPeak_added[i] = d1$headPeak + i
}
View(d1)
d1$headPeak_added[i] = d1$headPeak[i] + i
for (i in 1:nrow(d1)){
d1$headPeak_added[i] = d1$headPeak[i] + i
}
View(d1)
?read.table
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt", header = T)
View(d2)
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt", header = T)
View(d2)
library(readxl)
#(6) Import it into R using the read_excel() command and save it as an object called <d1>. [3 marks]
d1 <- read_excel("heightweight.xlsx")
#(7) Save "heightweight.xlsx" as a tab-delimited (.txt) file from Excel (Save as...) and import it as an object called <d2>. [4 marks]
d2 <- read.table("heightweight.txt", header = T)
View(d2)
###########################################################
#                Hands-On Exercise (HEx) 01               #
###########################################################
# This is what our HEx will look like                     #
# Write your R code here and submit this file on Canvas   #
# If you are asked to submit some screenshots/images,     #
#  paste them onto a word document and submit it too.     #
###########################################################
###########################################################
##Section A: Installing R and Starting a New Project
###########################################################
#(1) Create a new project named "Week 01.Rproj" (in a folder of your choice) following the instructions in the lecture slides.
#No code needed#
#(2) Create a new script and save it as "Week 01.R".
#No code needed#
#(3) Using the code provided in the lecture slides, install the <readxl> package. [2 marks]
install.packages("readxl")
library(readxl)
#(4) Now try to write your own code to install a package called <ggplot2>. [2 marks]
install.packages("ggplot2")
for (i in c(1, nrow(d1))){
d1$headPeak_added[i] = d1$headPeak[i] + i
}
View(d1)
#(17) Add <hpr> to to <d1> as a variable called "headPeak". [2 marks]
d1$headPeak <- hpr
d1$headPeak_added[i] = d1$headPeak[i] + i
for (i in c(1, nrow(d1))){
d1$headPeak_added[i] = d1$headPeak[i] + i
}
for (i in 1: nrow(d1)){
d1$headPeak_added[i] = d1$headPeak[i] + i
}
d1$headPeak[i] = d1$headPeak[i] + i
d1$headPeak[i] = d1$headPeak[i] + i
for (i in 1: nrow(d1)){
d1$headPeak[i] = d1$headPeak[i] + i
}
mean(d1[d1$Sex == "M"])
mean(d1$Sex[d1$Sex == "M"])
mean(d1$headPeak[d1$Sex == "M"])
tapply(d1, d1$headPeak, d1$Sex)
tapply(d1$headPeak, d1$Sex, mean)
apply(d1$headPeak, d1$Sex, mean)
tapply(d1$headPeak, d1$Sex, mean)
