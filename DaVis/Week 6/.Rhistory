"$1,000 to 4,999" = "$3000 to 3999",
"$1,000 to 4,999" = "$1000 to 2999",
"Less than $1,000" = "Lt $1000")
gss_cat[["rincome"]] <- fct_shift(fct_drop(gss_cat[["rincome"]]), n = 1)
nice_table("rincome", "Income")
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(kableExtra)
library(formattable)
levels(gss_cat$race)
table(gss_cat$race)
nice_table <- function(col, name) {
# col refers to the name of the column in the data set
# name refers to the column name to be printed
table(gss_cat[, col]) |>
# convert it to a data frame
as.data.frame() |>
# create a new column for frequency
mutate(Freq = color_bar("lightgreen")(Freq)) |>
kbl(
# edit a column name
col.names = c(name, "Frequency"),
align = c("l", "r"),
escape = FALSE
) |>
kable_styling(c("striped", "condensed"), full_width = FALSE)
}
# Check if the function works
nice_table("race", "Race")
# Dropping unused levels
gss_cat$race_drop_unused <- droplevels(gss_cat$race)
# Check if the unused level "Not applicable" has been dropped
!"Not applicable" %in% levels(gss_cat$race_drop_unused)
nice_table("race_drop_unused", "Race")
# Sorting based on frequency
gss_cat$race_drop_unused <- fct_infreq(gss_cat$race_drop_unused)
# Check if the levels have been ordered
nice_table("race_drop_unused", "Race")
levels(gss_cat$rincome)
nice_table("rincome", "Income")
gss_cat[["rincome"]] <- fct_recode(gss_cat[["rincome"]],
# merging similar items
"Not applicable" = "No answer",
"Not applicable" = "Don't know",
"Not applicable" = "Refused",
# correcting formatting
"$25,000 or more" = "$25000 or more",
"$20,000 to 24,999" = "$20000 - 24999",
"$15,000 to 19,999" = "$15000 - 19999",
"$10,000 to 14,999" = "$10000 - 14999",
"$5,000 to 9,999" = "$8000 to 9999",
"$5,000 to 9,999" = "$7000 to 7999",
"$5,000 to 9,999" = "$6000 to 6999",
"$5,000 to 9,999" = "$5000 to 5999",
"$1,000 to 4,999" = "$4000 to 4999",
"$1,000 to 4,999" = "$3000 to 3999",
"$1,000 to 4,999" = "$1000 to 2999",
"Less than $1,000" = "Lt $1000"
)
gss_cat[["rincome"]] <- fct_shift(fct_drop(gss_cat[["rincome"]]), n = 1)
# plot a table
nice_table("rincome", "Income")
levels(gss_cat$partyid)
# combining appropriate parties.
gss_cat$partyid_aggregated <- fct_collapse(gss_cat$partyid,
"Republican" = c(
"Strong republican",
"Not str republican"
),
"Independent" = c(
"Ind,near rep",
"Independent",
"Ind,near dem"
),
"Democrat" = c(
"Not str democrat",
"Strong democrat"
),
"Other" = c(
"Other party"
),
"Missing" = c(
"Don't know",
"No answer"
)
) |>
fct_infreq()
nice_table("partyid_aggregated", "Party affiliations")
gss_cat$is_protestant <- fct_collapse(gss_cat$relig,
"Protestant" = c("Protestant"),
other_level = "Other"
)
gss_cat$has_denom <- fct_collapse(gss_cat$denom,
"No answer" = c("No answer"),
"No denomination" = c("No denomination"),
"Not applicable" = c("Not applicable"),
"Don't know" = c("Don't know"),
other_level = "Has a denomination"
) |> fct_relevel(c(
"Has a denomination", "No denomination", "Not applicable",
"Don't know", "No answer"
))
data <- gss_cat[, c("is_protestant", "has_denom")]
data <- as.data.frame.matrix(table(data$has_denom, data$is_protestant))
data |>
mutate(
Protestant = color_bar("lightgreen")(Protestant),
Other = color_bar("lightgreen")(Other)
) |>
kbl(
col.names = c("Protestant", "Other"),
align = c("r"),
escape = FALSE
) |>
kable_styling(
c("striped", "condensed"),
full_width = FALSE
)
gss_cat$has_denom <- fct_collapse(gss_cat$denom,
"No answer" = c(
"No answer"
),
"No denomination" = c(
"No denomination"
),
"Not applicable" = c(
"Not applicable"
),
"Don't know" = c(
"Don't know"
),
other_level = c(
"Has a denomination"
)
) |> fct_relevel(c(
"Has a denomination",
"No denomination",
"Not applicable",
"Don't know",
"No answer"
))
styler:::style_selection()
# extract the necessary factors
data <- gss_cat[, c("is_protestant",
"has_denom")]
# convert it to a data frame
data <- as.data.frame.matrix(table(data$has_denom, data$is_protestant))
# extract the necessary factors
data <- gss_cat[, c("is_protestant",
"has_denom")]
# convert it to a data frame
data <- as.data.frame.matrix(table(data$has_denom, data$is_protestant))
data
styler:::style_selection()
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) +
geom_point(colour = "blue")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy, colour = "blue")) +
geom_point()
library(ggplot2)
#ggplot(mpg, aes(displ, hwy)) +
geom_point(colour = "blue")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy, colour = "blue")) +
geom_point()
ggplot(harelynx, aes(hare, lynx, colour = year)) +
geom_path() +
geom_point()
data(harelynx)
data(harelynx)
data(harelynx)
ggplot(harelynx, aes(hare, lynx, colour = year)) +
geom_path() +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(tidyverse)
library(dplyr)
read.csv("pbc.tsv", sep = "\t")
4/7
ggplot(data = pbc, aes(age))+
geom_histogram(color = 'black',
fill = 'white')
pbc <- read.csv("pbc.tsv", sep = "\t")
pbc %>%
filter(sex == 'm')
ggplot(data = pbc, aes(age))+
geom_histogram(color = 'black',
fill = 'white')
knitr::opts_chunk$set(message=FALSE, fig.align = 'center')
data = matrix(c(80, 40, 40, 50), ncol=2, nrow=2)
colnames(data)= c("pancreatic cancer", "no pancreatic cancer")
row.names(data)= c("smoker", "no smokers")
(80 + 40) / (80+40+40+50)
80 / (80+40)
40 / (40 + 80)
0.5714286 ^ 2
abs(180-150) / 36
abs(140-150) / 36
150 - (1.4 * 36)
x = 1.96 * 36
sprintf("The tallest is %g cm", 150 + x)
sprintf("The shortest is %g cm", 150 - x)
quantile(rnorm(4000, 150, 36), 0.025)
quantile(rnorm(4000, 150, 36), 0.975)
height <- function(height){
x <-  abs(150 - height) / 36
y <- 0
if (height > 150){
y <-  "above"
}
else{
y <-  "below"
}
sprintf("The individual is %.2f SDs %s average height.", x, y)
}
height(120)
height(155)
height(90)
patients <- c(50,30,20,10,10)
lesions <- c(0,1,2,3,4)
for (i in 1:5){
s <-  0
s <- s + (patients[i]*lesions[i])
ans <- s / sum(patients)
}
sprintf("The mean is %.2f", ans)
pbc <- read.csv("pbc.tsv", sep = "\t")
pbc %>%
filter(sex == 'm')
ggplot(data = pbc, aes(age))+
geom_histogram(color = 'black',
fill = 'white')
ggplot(data = pbc, aes(chol))+
geom_histogram(color = 'black',
fill = 'white')
a <- c()
for (i in 1:nrow(pbc)){
a[i] <- abs(pbc$bili[i] - mean(pbc$bili))
}
median(a)
nrow(pbc %>%
filter(sex == "m" & edema == 1)) /
nrow(pbc %>%
filter(sex == "m"))
x = nrow(pbc %>%
filter(sex == "f" &trt == 1)) /
nrow(pbc %>%
filter(sex == "f"))
sprintf("The probability of being on D-penicillamine given that you are female is %.4f", x)
# P(F)
P_f = nrow(pbc %>% filter(sex == "f")) /
nrow(pbc)
# P(D)
P_d = nrow(pbc %>% filter(trt == 1)) /
nrow(pbc)
# P(F and D)
P_fd = nrow(pbc %>% filter(sex == "f" & trt == 1))/
nrow(pbc)
P_f * P_d
P_fd
x = nrow(pbc %>%
filter(sex == "m" & age > 50)) /
nrow(pbc)
y = nrow(pbc %>%
filter(sex == "f" & age > 50)) /
nrow(pbc)
sprintf("The probability of being male and being older than 50 is %.4f and the probability of being female and being older than 50 is %.4f", x,y)
g <- nrow(pbc %>%
filter(ascites == 1)) /
nrow(pbc)
sprintf("The probability of a patient having ascites is %.4f", g)
Q_i <- nrow(pbc %>%
filter(albumin > 200 & platelet > 400)) /
nrow(pbc)
sprintf("The probability of having a albumin level above 200 and a platelet count above 400 is %g", Q_i)
quantile(pbc$albumin)
# P(S)
P_s <- nrow(pbc %>%
filter(spiders == 1)) /
nrow(pbc)
for (x in 1:3){
compare = c()
P_dx <- nrow(pbc %>%
filter(stage == x)) /
nrow(pbc)
P_s_dx <- nrow(pbc %>%
filter(spiders == 1 &
stage == x)) /
nrow(pbc)
k <- sprintf("For the stage %g, the P(S&d%g) is %.4f and P(S)*P(dx) is %.4f.", x, x,P_s_dx, P_s * P_dx)
print(k)
}
nrow(pbc %>%
filter(spiders == 1 &
trt == 1)) /
nrow(pbc %>%
filter(trt == 1))
sessionInfo()
Q_i <- nrow(pbc %>%
filter(copper > 200 & platelet > 400)) /
nrow(pbc)
sprintf("The probability of having a albumin level above 200 and a platelet count above 400 is %g", Q_i)
Q_i <- nrow(pbc %>%
filter(copper > 200 & platelet > 400)) /
nrow(pbc)
sprintf("The probability of having a albumin level above 200 and a platelet count above 400 is %.4f", Q_i)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, fig.align = "center")
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, fig.align = "center")
library(tidyverse)
life_quality <- read_csv("life_quality.csv")
setwd("E:/Academics/DaVis/Week 6")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, fig.align = "center")
library(tidyverse)
life_quality <- read_csv("life_quality.csv")
life_quality
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
#geom_text(aes(label = country_name), check_overlap = TRUE, size = 2)
?scale_size
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
#geom_text(aes(label = country_name), check_overlap = TRUE, size = 2)
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
#geom_text(aes(label = country_name), check_overlap = TRUE, size = 2)
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, fig.align = "center")
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, fig.align = "center")
library(tidyverse)
life_quality <- read_csv("life_quality.csv")
life_quality
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
#geom_text(aes(label = country_name), check_overlap = TRUE, size = 2)
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
#geom_text(aes(label = country_name), check_overlap = TRUE, size = 2)
ggplot(data = life_quality,
aes(x = gdp_per_capita,
y = life_expectancy,
size = pop,
colour = continent
)
)+
geom_point(alpha = 0.5)+
scale_x_continuous(trans='log10',
breaks = c(1000, 10000, 100000),
labels = c("$1,000", "$10,000", "$100,000"))+
labs(x = "GDP per capita (US$, PPP 2015)",
y = "Life expectancy (years)",
title = "Wealth and Health by Country in 2015",
caption = "Source : World Bank") +
theme(plot.title = element_text(hjust = 0.5))+
scale_size(range = c(1,20), name = "Population",
breaks = c(100000, 10000000, 10000000, 1000000000))+
scale_fill_continuous(name = "Population",
labels = c("1 million", "10 million", "10 million", "1 billion"))
geom_text(aes(label = country_name), check_overlap = TRUE, size = 2)
