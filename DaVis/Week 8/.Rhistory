head(missing_values, n = 6)
missing_values <- wb |>
mutate(na = ifelse(is.na(gdp) | is.na(le) | is.na(pop), 1, 0)) |>
group_by(year) |>
summarise(na_countries = sum(na))
missing_values
m_pl <- missing_values |>
ggplot(aes(as.integer(year), na_countries)) +
geom_line() +
theme(axis.text.x = element_text(vjust = 0.5)) +
labs(
title = "Number of countries w/ missing GDP, Population and/or Life expectancy",
x = "Year",
y = "Number of missing data",
caption = "Source: World Bank"
) +
scale_x_continuous(
breaks = seq(1960, 2020, 10),
limits = c(1960, 2020),
) +
scale_y_continuous(
limits = c(0, 250),
expand = expansion(0)
) +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
m_pl
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
sum(is.na(gap$country_code))
# Arranging the data according to country and country_code,
# filtering all repeated rows such that no two rows will be the same
compare <- gap |>
select("country", "country_code") |>
distinct()
# Find the number of countries with the same code.
dim(compare[duplicated(compare$country_code), ])[1]
# countries in gap but not in wb
anti_join(gap, wb, by = c("country" = "Country Name")) |>
distinct(country) |>
head()
# countries in wb but not in gap
anti_join(wb, gap, by = c("Country Name" = "country")) |>
distinct(`Country Name`) |>
head()
wb_2007 <- wb |>
filter(year == "2007") |>
select("Country Name", "Country Code", "gdp") |>
drop_na()
gap_2007 <- gap |>
filter(year == 2007) |>
select(c(1, 2, 6, 7)) |>
drop_na()
wb_gap <- inner_join(
wb_2007,
gap_2007,
by = c("Country Name" = "country", "Country Code" = "country_code")
) |>
head()
wb_gap <- wb_gap |>
add_column(per_chge = (wb_gap$gdpPercap - wb_gap$gdp) / wb_gap$gdp * 100)
head(wb_gap[order(wb_gap$per_chge, decreasing = TRUE), ], n = 5)
head(wb_gap[order(wb_gap$per_chge), ], n = 5)
knitr::opts_chunk$set(fig.align = 'center')
library(tidyverse)
library(ggplot2)
library(readxl)
library(countrycode)
library(gapminder)
gdp <- read_excel("API_NY.GDP.PCAP.KD_DS2_en_excel_v2_3731742.xls",
skip = 3,
sheet = "Data"
)
le <- read_excel("API_SP.DYN.IMRT.MA.IN_DS2_en_excel_v2_3734819.xls",
skip = 3,
sheet = "Data"
)
pop <- read_excel("API_SP.POP.TOTL_DS2_en_excel_v2_3759026.xls",
skip = 3,
sheet = "Data"
)
all(gdp$`Country Code` == le$`Country Code`)
all(pop$`Country Code` == le$`Country Code`)
gdp_n <- gdp |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "gdp"
) |>
select("Country Name", "Country Code", "year", "gdp")
le_n <- le |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "le"
) |>
select("Country Name", "Country Code", "year", "le")
pop_n <- pop |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "pop"
) |>
select("Country Name", "Country Code", "year", "pop")
colm <- c("Country Name", "Country Code", "year")
wb <- left_join(gdp_n, le_n, by = colm) |>
left_join(pop_n, by = colm)
code <- as_tibble(codelist$iso3c) |>
select("Country Code" = value)
no_match <- anti_join(wb, code, by = "Country Code")
unique(no_match$`Country Name`)
wb <- wb |>
semi_join(code, by = "Country Code")
missing_values <- wb |>
mutate(na = ifelse(is.na(gdp) | is.na(le) | is.na(pop), 1, 0)) |>
group_by(year) |>
summarise(na_countries = sum(na))
m_pl <- missing_values |>
ggplot(aes(as.integer(year), na_countries)) +
geom_line() +
theme(axis.text.x = element_text(vjust = 0.5)) +
labs(
title = "Number of countries w/ missing GDP, Population and/or Life expectancy",
x = "Year",
y = "Number of missing data",
caption = "Source: World Bank"
) +
scale_x_continuous(
breaks = seq(1960, 2020, 10),
limits = c(1960, 2020),
) +
scale_y_continuous(
limits = c(0, 250),
expand = expansion(0)
) +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
m_pl
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
sum(is.na(gap$country_code))
# Arranging the data according to country and country_code,
# filtering all repeated rows such that no two rows will be the same
compare <- gap |>
select("country", "country_code") |>
distinct()
# Find the number of countries with the same code.
dim(compare[duplicated(compare$country_code), ])[1]
# countries in gap but not in wb
anti_join(gap, wb, by = c("country" = "Country Name")) |>
distinct(country)
# countries in wb but not in gap
anti_join(wb, gap, by = c("Country Name" = "country")) |>
distinct(`Country Name`)
wb_2007 <- wb |>
filter(year == "2007") |>
select("Country Name", "Country Code", "gdp") |>
drop_na()
gap_2007 <- gap |>
filter(year == 2007) |>
select(c(1, 2, 6, 7)) |>
drop_na()
wb_gap <- inner_join(wb_2007, gap_2007, by = c("Country Name" = "country", "Country Code" = "country_code"))
wb_gap
wb_gap <- wb_gap |>
add_column(per_chge = (wb_gap$gdpPercap - wb_gap$gdp) / wb_gap$gdp * 100)
head(wb_gap[order(wb_gap$per_chge, decreasing = TRUE), ], n = 5)
head(wb_gap[order(wb_gap$per_chge), ], n = 5)
missing_values
knitr::opts_chunk$set(fig.align = 'center')
library(tidyverse)
library(ggplot2)
library(readxl)
library(countrycode)
library(gapminder)
gdp <- read_excel("API_NY.GDP.PCAP.KD_DS2_en_excel_v2_3731742.xls",
skip = 3,
sheet = "Data"
)
le <- read_excel("API_SP.DYN.IMRT.MA.IN_DS2_en_excel_v2_3734819.xls",
skip = 3,
sheet = "Data"
)
pop <- read_excel("API_SP.DYN.LE00.IN_DS2_en_excel_v2_3731513.xls",
skip = 3,
sheet = "Data"
)
all(gdp$`Country Code` == le$`Country Code`)
all(pop$`Country Code` == le$`Country Code`)
gdp_n <- gdp |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "gdp"
) |>
select("Country Name", "Country Code", "year", "gdp")
le_n <- le |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "le"
) |>
select("Country Name", "Country Code", "year", "le")
pop_n <- pop |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "pop"
) |>
select("Country Name", "Country Code", "year", "pop")
colm <- c("Country Name", "Country Code", "year")
wb <- left_join(gdp_n, le_n, by = colm) |>
left_join(pop_n, by = colm)
code <- as_tibble(codelist$iso3c) |>
select("Country Code" = value)
no_match <- anti_join(wb, code, by = "Country Code")
unique(no_match$`Country Name`)
wb <- wb |>
semi_join(code, by = "Country Code")
missing_values <- wb |>
mutate(na = ifelse(is.na(gdp) | is.na(le) | is.na(pop), 1, 0)) |>
group_by(year) |>
summarise(na_countries = sum(na))
missing_values
m_pl <- missing_values |>
ggplot(aes(as.integer(year), na_countries)) +
geom_line() +
theme(axis.text.x = element_text(vjust = 0.5)) +
labs(
title = "Number of countries w/ missing GDP, Population and/or Life expectancy",
x = "Year",
y = "Number of missing data",
caption = "Source: World Bank"
) +
scale_x_continuous(
breaks = seq(1960, 2020, 10),
limits = c(1960, 2020),
) +
scale_y_continuous(
limits = c(0, 250),
expand = expansion(0)
) +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
m_pl
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
sum(is.na(gap$country_code))
# Arranging the data according to country and country_code,
# filtering all repeated rows such that no two rows will be the same
compare <- gap |>
select("country", "country_code") |>
distinct()
# Find the number of countries with the same code.
dim(compare[duplicated(compare$country_code), ])[1]
# countries in gap but not in wb
anti_join(gap, wb, by = c("country" = "Country Name")) |>
distinct(country)
# countries in wb but not in gap
anti_join(wb, gap, by = c("Country Name" = "country")) |>
distinct(`Country Name`)
wb_2007 <- wb |>
filter(year == "2007") |>
select("Country Name", "Country Code", "gdp") |>
drop_na()
gap_2007 <- gap |>
filter(year == 2007) |>
select(c(1, 2, 6, 7)) |>
drop_na()
wb_gap <- inner_join(wb_2007, gap_2007, by = c("Country Name" = "country", "Country Code" = "country_code"))
wb_gap
wb_gap <- wb_gap |>
add_column(per_chge = (wb_gap$gdpPercap - wb_gap$gdp) / wb_gap$gdp * 100)
head(wb_gap[order(wb_gap$per_chge, decreasing = TRUE), ], n = 5)
head(wb_gap[order(wb_gap$per_chge), ], n = 5)
knitr::opts_chunk$set(fig.align = 'center')
library(tidyverse)
library(ggplot2)
library(readxl)
library(countrycode)
library(gapminder)
gdp <- read_excel("API_NY.GDP.PCAP.KD_DS2_en_excel_v2_3731742.xls",
skip = 3,
sheet = "Data"
)
le <- read_excel("API_SP.DYN.LE00.IN_DS2_en_excel_v2_3731513.xls",
skip = 3,
sheet = "Data"
)
pop <- read_excel("API_SP.POP.TOTL_DS2_en_excel_v2_3759026.xls",
skip = 3,
sheet = "Data"
)
all(gdp$`Country Code` == le$`Country Code`)
all(pop$`Country Code` == le$`Country Code`)
gdp_n <- gdp |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "gdp"
) |>
select("Country Name", "Country Code", "year", "gdp")
le_n <- le |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "le"
) |>
select("Country Name", "Country Code", "year", "le")
pop_n <- pop |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "pop"
) |>
select("Country Name", "Country Code", "year", "pop")
colm <- c("Country Name", "Country Code", "year")
wb <- left_join(gdp_n, le_n, by = colm) |>
left_join(pop_n, by = colm)
code <- as_tibble(codelist$iso3c) |>
select("Country Code" = value)
no_match <- anti_join(wb, code, by = "Country Code")
unique(no_match$`Country Name`)
wb <- wb |>
semi_join(code, by = "Country Code")
missing_values <- wb |>
mutate(na = ifelse(is.na(gdp) | is.na(le) | is.na(pop), 1, 0)) |>
group_by(year) |>
summarise(na_countries = sum(na))
missing_values
m_pl <- missing_values |>
ggplot(aes(as.integer(year), na_countries)) +
geom_line() +
theme(axis.text.x = element_text(vjust = 0.5)) +
labs(
title = "Number of countries w/ missing GDP, Population and/or Life expectancy",
x = "Year",
y = "Number of missing data",
caption = "Source: World Bank"
) +
scale_x_continuous(
breaks = seq(1960, 2020, 10),
limits = c(1960, 2020),
) +
scale_y_continuous(
limits = c(0, 250),
expand = expansion(0)
) +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
m_pl
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
sum(is.na(gap$country_code))
# Arranging the data according to country and country_code,
# filtering all repeated rows such that no two rows will be the same
compare <- gap |>
select("country", "country_code") |>
distinct()
# Find the number of countries with the same code.
dim(compare[duplicated(compare$country_code), ])[1]
# countries in gap but not in wb
anti_join(gap, wb, by = c("country" = "Country Name")) |>
distinct(country)
# countries in wb but not in gap
anti_join(wb, gap, by = c("Country Name" = "country")) |>
distinct(`Country Name`)
wb_2007 <- wb |>
filter(year == "2007") |>
select("Country Name", "Country Code", "gdp") |>
drop_na()
gap_2007 <- gap |>
filter(year == 2007) |>
select(c(1, 2, 6, 7)) |>
drop_na()
wb_gap <- inner_join(wb_2007, gap_2007, by = c("Country Name" = "country", "Country Code" = "country_code"))
wb_gap
wb_gap <- wb_gap |>
add_column(per_chge = (wb_gap$gdpPercap - wb_gap$gdp) / wb_gap$gdp * 100)
head(wb_gap[order(wb_gap$per_chge, decreasing = TRUE), ], n = 5)
head(wb_gap[order(wb_gap$per_chge), ], n = 5)
knitr::opts_chunk$set(fig.align = 'center', message = FALSE)
gdp_n <- gdp |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "gdp"
) |>
select("Country Name", "Country Code", "year", "gdp")
le_n <- le |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "le"
) |>
select("Country Name", "Country Code", "year", "le")
pop_n <- pop |>
pivot_longer(c(`1960`:`2020`),
names_to = "year",
values_to = "pop"
) |>
select("Country Name", "Country Code", "year", "pop")
wb <- left_join(gdp_n, le_n) |>
left_join(pop_n)
wb |>
anti_join(codelist, by = c("country_code" = "iso3c")) |>
select("Country", "Country code") |>
unique()
wb |>
anti_join(codelist, by = c("Country code" = "iso3c")) |>
select("Country", "Country code") |>
unique()
wb |>
anti_join(codelist, by = c("Country Code" = "iso3c")) |>
select("Country", "Country Code") |>
unique()
wb
wb |>
anti_join(codelist, by = c("Country Code" = "iso3c")) |>
select("Country Name", "Country Code") |>
unique()
wb |>
anti_join(codelist, by = c("Country Code" = "iso3c")) |>
select("Country Name") |>
unique() |>
head()
wb |>
anti_join(codelist, by = c("Country Code" = "iso3c")) |>
select("Country Name") |>
unique() |>
head(n=10)
styler:::style_selection()
wb <- wb |>
semi_join(code, by = "Country Code")
missing_values <- wb |>
mutate(na = ifelse(is.na(gdp) | is.na(le) | is.na(pop), 1, 0)) |>
group_by(year) |>
summarise(na_countries = sum(na))
missing_values
missing_values <- wb |>
mutate(na = ifelse(is.na(gdp) | is.na(le) | is.na(pop), 1, 0)) |>
group_by(year) |>
summarise(na_countries = sum(na))
head(missing_values)
m_pl <- missing_values |>
ggplot(aes(as.integer(year), na_countries)) +
geom_line() +
theme(axis.text.x = element_text(vjust = 0.5)) +
labs(
title = "Number of countries w/ missing GDP, Population and/or Life expectancy",
x = "Year",
y = "Number of missing data",
caption = "Source: World Bank"
) +
scale_x_continuous(
breaks = seq(1960, 2020, 10),
limits = c(1960, 2020),
) +
scale_y_continuous(
limits = c(0, 250),
expand = expansion(0)
) +
theme(
plot.title = element_text(hjust = 0.5, size = 18),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)
)
m_pl
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
sum(is.na(gap$country_code))
# Arranging the data according to country and country_code,
# filtering all repeated rows such that no two rows will be the same
compare <- gap |>
select("country", "country_code") |>
distinct()
# Find the number of countries with the same code.
dim(compare[duplicated(compare$country_code), ])[1]
# countries in gap but not in wb
anti_join(gap, wb, by = c("country" = "Country Name")) |>
distinct(country)
# countries in wb but not in gap
anti_join(wb, gap, by = c("Country Name" = "country")) |>
distinct(`Country Name`)
wb_2007 <- wb |>
filter(year == "2007") |>
select("Country Name", "Country Code", "gdp") |>
drop_na()
gap_2007 <- gap |>
filter(year == 2007) |>
select(c(1, 2, 6, 7)) |>
drop_na()
wb_gap <- inner_join(wb_2007, gap_2007, by = c("Country Name" = "country", "Country Code" = "country_code"))
wb_gap
wb_gap <- wb_gap |>
add_column(per_chge = (wb_gap$gdpPercap - wb_gap$gdp) / wb_gap$gdp * 100)
wb_gap <- wb_gap |>
mutate(per_chge = (gdpPercap - gdp) / gdp * 100)
head(wb_gap[order(wb_gap$per_chge, decreasing = TRUE), ], n = 5)
head(wb_gap[order(wb_gap$per_chge), ], n = 5)
styler:::style_selection()
