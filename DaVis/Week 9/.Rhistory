title = "Countries with NA by year"
) +
theme(
plot.title = element_text(hjust = 0.5)
)
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
gap
sum(is.na(gap$country_code))
gap |>
select(country, country_code) |>
distinct() |>
group_by(country_code) |>
summarise(overlaps = n()) |>
filter(overlaps != 1)
all(length(unique(gap$country_code)), length(unique(gap$country)))
gap |>
select(country) |>
filter(!(country %in% wb$country)) |>
distinct()
wb <- wb |>
filter(year == 2007) |>
select(country, gdp_wb = gdp)
gap <- gap |>
filter(year == 2007) |>
select(country, gdp_gap = gdpPercap)
wb_gap <- wb |>
inner_join(gap)
wb_gap
wb_gap |>
mutate(perc = (gdp_gap - gdp_wb)/gdp_wb)
wb
knitr::opts_chunk$set(message = FALSE)
library(countrycode)
library(gapminder)
library(readxl)
library(tidyverse)
gdp <- readxl::read_excel("gdp.xls", skip = 3, sheet = "Data") |>
rename(country = "Country Name", country_code = "Country Code")
life <- readxl::read_excel("life.xls", skip = 3, sheet = "Data")|>
rename(country = "Country Name", country_code = "Country Code")
pop <- readxl::read_excel("pop.xls", skip = 3, sheet = "Data")|>
rename(country = "Country Name", country_code = "Country Code")
all(gdp$country_code == life$country_code)
all(gdp$country_code == pop$country_code)
gdp_pivoted <- pivot_longer(
data = gdp,
cols = c('1960':'2005'),
names_to = "year",
values_to = "gdp"
) |>
select(country, country_code, year, gdp)
life_pivoted <- pivot_longer(
data = life,
cols = c('1960':'2005'),
names_to = "year",
values_to = "life"
)|>
select(country, country_code, year, life)
pop_pivoted <- pivot_longer(
data = pop,
cols = c('1960':'2005'),
names_to = "year",
values_to = "pop"
) |>
select(country, country_code, year, pop)
wb <- gdp_pivoted |>
left_join(life_pivoted) |>
left_join(pop_pivoted)
wb |>
anti_join(codelist, by = c("country_code" = "iso3c")) |>
select(country, country_code) |>
unique()
wb_removed <- wb |>
semi_join(codelist, by = c("country_code" = "iso3c"))
wb_removed
wb <- wb_removed |>
filter(!(is.na(gdp) | is.na(life) | is.na(pop)))
missing_values <- wb_removed |>
filter(is.na(gdp) | is.na(life) | is.na(pop)) |>
group_by(year) |>
summarise(na_countries = n())
head(missing_values, n = 6)
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year"
) +
theme(
plot.title = element_text(hjust = 0.5)
)
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
gap
sum(is.na(gap$country_code))
gap |>
select(country, country_code) |>
distinct() |>
group_by(country_code) |>
summarise(overlaps = n()) |>
filter(overlaps != 1)
all(length(unique(gap$country_code)), length(unique(gap$country)))
gap |>
select(country) |>
filter(!(country %in% wb$country)) |>
distinct()
wb
wb |>
filter(year == "2007")
wb |> select(year)
wb |> select(year) |>
distinct()
wb |>
filter(year = "2003")
wb |>
filter(year = ="2003")
wb |>
filter(year =="2003")
knitr::opts_chunk$set(message = FALSE)
library(countrycode)
library(gapminder)
library(readxl)
library(tidyverse)
gdp <- readxl::read_excel("gdp.xls", skip = 3, sheet = "Data") |>
rename(country = "Country Name", country_code = "Country Code")
life <- readxl::read_excel("life.xls", skip = 3, sheet = "Data")|>
rename(country = "Country Name", country_code = "Country Code")
pop <- readxl::read_excel("pop.xls", skip = 3, sheet = "Data")|>
rename(country = "Country Name", country_code = "Country Code")
all(gdp$country_code == life$country_code)
all(gdp$country_code == pop$country_code)
gdp_pivoted <- pivot_longer(
data = gdp,
cols = c('1960':'2020'),
names_to = "year",
values_to = "gdp"
) |>
select(country, country_code, year, gdp)
life_pivoted <- pivot_longer(
data = life,
cols = c('1960':'2020'),
names_to = "year",
values_to = "life"
)|>
select(country, country_code, year, life)
pop_pivoted <- pivot_longer(
data = pop,
cols = c('1960':'2020'),
names_to = "year",
values_to = "pop"
) |>
select(country, country_code, year, pop)
wb <- gdp_pivoted |>
left_join(life_pivoted) |>
left_join(pop_pivoted)
wb |>
anti_join(codelist, by = c("country_code" = "iso3c")) |>
select(country, country_code) |>
unique()
wb_removed <- wb |>
semi_join(codelist, by = c("country_code" = "iso3c"))
wb_removed
wb <- wb_removed |>
filter(!(is.na(gdp) | is.na(life) | is.na(pop)))
missing_values <- wb_removed |>
filter(is.na(gdp) | is.na(life) | is.na(pop)) |>
group_by(year) |>
summarise(na_countries = n())
head(missing_values, n = 6)
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year"
) +
theme(
plot.title = element_text(hjust = 0.5)
)
gap <-
gapminder_unfiltered |>
filter(country != "Netherlands Antilles") |>
mutate(country_code = countrycode(country, "country.name", "iso3c"))
gap
sum(is.na(gap$country_code))
gap |>
select(country, country_code) |>
distinct() |>
group_by(country_code) |>
summarise(overlaps = n()) |>
filter(overlaps != 1)
all(length(unique(gap$country_code)), length(unique(gap$country)))
gap |>
select(country) |>
filter(!(country %in% wb$country)) |>
distinct()
wb |>
filter(year =="2003")
wb <- wb |>
filter(year == 2007) |>
select(country, gdp_wb = gdp)
gap <- gap |>
filter(year == 2007) |>
select(country, gdp_gap = gdpPercap)
wb_gap <- wb |>
inner_join(gap)
wb_gap
wb_gap |>
mutate(perc = (gdp_gap - gdp_wb)/gdp_wb)
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year",
caption = "Source: World Bank"
) +
theme(
plot.title = element_text(hjust = 0.5)
)
wb_gap |>
mutate(perc = (gdp_gap - gdp_wb)/gdp_wb)
Q11 |>
arrange(perc)
Q11 <- wb_gap |>
mutate(perc = (gdp_gap - gdp_wb)/gdp_wb)
Q11 |>
arrange(perc)
Q11 |>
arrange(perc) |>
head(5)
Q11 |>
arrange(perc) |>
head(5)
Q11 |>
arrange(-perc) |>
head(5)
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year",
caption = "Source: World Bank"
) +
theme(
plot.title = element_text(hjust = 0.5)
) +
ylim(0,250)
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year",
caption = "Source: World Bank"
) +
theme(
plot.title = element_text(hjust = 0.5)
) +
ylim(0,225)
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year",
caption = "Source: World Bank"
) +
theme(
plot.title = element_text(hjust = 0.5)
) +
ylim(0,225) +
scale_x_continuous(labels = c(seq(1960, 2020,10)))
ggplot(data = missing_values, aes(as.integer(year), na_countries)) +
geom_line() +
labs(
x = "Year",
y = "Number of Countries with NA",
title = "Countries with NA by year",
caption = "Source: World Bank"
) +
theme(
plot.title = element_text(hjust = 0.5)
) +
ylim(0,225) +
scale_x_continuous(breaks= c(seq(1960, 2020, 10)))
library(tidyverse)
demo_nodes <- read_csv("networks_data/demo_nodes.csv")
setwd("E:/Academics/DaVis/Week 9")
library(tidyverse)
demo_nodes <- read_csv("networks_data/demo_nodes.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
demo_nodes <- read_csv("networks_data/demo_nodes.csv")
library(tidyverse)
demo_nodes <- read_csv("demo_nodes.csv")
demo_edges <- read_csv("demo_edges.csv")
knitr::opts_chunk$set(echo = TRUE, message= FALSE)
demo_nodes
demo_edges
install.packages("tidygraph")
library(tidygraph)
demo_undirected_netw <- tbl_graph(
nodes = demo_nodes,
edges = demo_edges,
directed = FALSE
)
demo_undirected_netw
class(demo)undirected_netw)
class(demo_ndirected_netw)
class(demo_udirected_netw)
class(demo_undirected_netw)
active(demo_undirected_netw)
demo_undirected_netw |>
activate(edges)|>
as_tibble()
email_nodes <- read_csv("email_nodes.csv")
email_edges <- read_csv("email_edges.csv")
email_directed_netw <- tbl_graph(
nodes = email_nodes,
edges = email_edges
)
install.packages("igraph")
knitr::opts_chunk$set(echo = TRUE, message= FALSE)
library(igraph)
is_directed(email_directed_netw)
is_directed(demo_undirected_netw)
gorder(demo_undirected_netw)
gorder(demo_undirected_netw)
gsize(demo_undirected_netw)
install.packages("ggraph")
library(ggraph)
library(ggplot2)
library(ggplot2)
library(ggraph)
ggraph(demo_undirected_netw) +
geom_edge_link() +
geom_node_label(aes(label = name))
ggraph(demo_undirected_netw, layout = "kk") +
geom_edge_link() +
geom_node_label(aes(label = name))
layout <- create_layout(demo_undirected_netw, layout = "kk")
ggraph(layout) +
geom_edge_link() +
geom_node_label(aes(label = name))
layout
layout$y[layout$name == "K"] <- 0.5
ggraph(layout) +
geom_edge_link() +
geom_node_label(aes(label = name))
styler:::style_selection()
ggraph(demo_undirected_netw, layout = "kk") +
geom_edge_bend(strength = 0.8) +
geom_node_circle(
aes(r = if_else(name < "G", 0.05, 0.1)),
fill = "green"
) +
geom_node_text(aes(label = name), repel = TRUE) +
coord_equal()
library(tidyverse)
library(tidyverse)
ggraph(demo_undirected_netw, layout = "kk") +
geom_edge_bend(strength = 0.8) +
geom_node_circle(
aes(r = if_else(name < "G", 0.05, 0.1)),
fill = "green"
) +
geom_node_text(aes(label = name), repel = TRUE) +
coord_equal()
library(tidyverse)
ggraph(demo_undirected_netw, layout = "kk") +
geom_edge_bend(strength = 0.8) +
geom_node_circle(
aes(r = if_else(name < "G", 0.05, 0.1)),
fill = "green"
) +
geom_node_text(aes(label = name), repel = TRUE) +
coord_equal()
styler:::style_selection()
set.seed(-688508752)
email_layout <- create_layout(email_directed_netw, layout = "fr")
email_layout$x[email_layout$name == "Hossam"] <- min(email_layout$x)
email_layout$y[email_layout$name == "Hossam"] <- min(email_layout$y)
ggraph(email_layout) +
geom_edge_fan(
aes(
label = emails,
end_cap = label_rect(node2.name)
),
arrow = arrow(length = unit(2, "mm")),
strength = 1.5,
angle_calc = "along",
label_dodge = unit(2, "mm")
) +
geom_edge_loop(
aes(label = emails, end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(2, "mm")),
angle_calc = "along",
label_dodge = unit(2, "mm")
) +
geom_node_label(aes(label = name, colour = location)) +
scale_colour_brewer(name = "Location", palette = "Dark2") +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
styler:::style_selection()
library(tidygraph)
email_directed_netw |>
activate(nodes) |>
mutate(
continent = case_when(
location == "London" ~ "Europe",
location == "Los Angeles" ~ "North America",
location == "Singapore" ~ "Asia"
)
) |>
activate(edges) |>
rename(electronic_mail = emails)
email_directed_netw <-
email_directed_netw |>
activate(edges) |>
mutate(
from_id = .N()$name[from],
to_id = .N()$name[to]
)
email_directed_netw
email_undirected_netw <-
email_directed_netw |>
convert(to_undirected)
set.seed(-68858752)
email_layout <- create_layout(email_directed_netw, layout = "fr")
email_layout$x[email_layout$name == "Hossam"] <- min(email_layout$x)
email_layout$y[email_layout$name == "Hossam"] <- min(email_layout$y)
ggraph(email_layout) +
geom_edge_fan(
aes(
label = emails,
end_cap = label_rect(node2.name)
),
arrow = arrow(length = unit(2, "mm")),
strength = 1.5,
angle_calc = "along",
label_dodge = unit(2, "mm")
) +
geom_edge_loop(
aes(label = emails, end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(2, "mm")),
angle_calc = "along",
label_dodge = unit(2, "mm")
) +
geom_node_label(aes(label = name, colour = location)) +
scale_colour_brewer(name = "Location", palette = "Dark2") +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
set.seed(-68858752)
email_layout <- create_layout(email_directed_netw, layout = "fr")
email_layout$x[email_layout$name == "Hossam"] <- min(email_layout$x)
email_layout$y[email_layout$name == "Hossam"] <- min(email_layout$y)
ggraph(email_layout) +
geom_edge_fan(
aes(
label = emails,
end_cap = label_rect(node2.name)
),
) +
geom_edge_loop(
aes(label = emails, end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(2, "mm")),
angle_calc = "along",
label_dodge = unit(2, "mm")
) +
geom_node_label(aes(label = name, colour = location)) +
scale_colour_brewer(name = "Location", palette = "Dark2") +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
is_simple(email_undirected_netw)
email_simple_netw <-
email_undirected_netw |>
convert(to_simple)
email_simple_netw <-
email_undirected_netw |>
convert(to_simple)
email_simple_edges <-
email_simple_netw |>
activate(edges) |>
as_tibble()
email_simple_edges
styler:::style_selection()
factor_location <-
email_directed_netw |>
activate(nodes) |>
pull(location) |>
factor()
email_contracted_netw <-
email_directed_netw |>
activate(nodes) |>
mutate(level_as_integer = as.integer(factor_location)) |>
convert(to_contracted, level_as_integer) |>
mutate(location = levels(factor_location)) |>
activate(edges) |>
mutate(emails = map_dbl(.orig_data, ~ sum(pull(., emails))))
ggraph(email_contracted_netw, layout = "stress") +
geom_edge_fan(aes(label = emails, end_cap = label_rect(node2.location)),
arrow = arrow(length = unit(4, "mm")),
angle_calc = "along",
label_dodge = unit(2, "mm")
) +
geom_node_label(aes(label = location)) +
scale_x_continuous(expand = expansion(c(0.1, 0.06)))
